paths:
  /carts/view:
    get:
      summary: Obtiene la vista del carrito.
      tags:
        - Cart
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Vista del carrito obtenida correctamente.
          content:
            text/html:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Error interno del servidor.

  /carts/:
    post:
      summary: Crea un nuevo carrito.
      tags:
        - Cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCart'
      responses:
        '201':
          description: Nuevo carrito creado correctamente.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Error interno del servidor.

    get:
      summary: Obtiene los productos del carrito.
      tags:
        - Cart
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Productos del carrito obtenidos correctamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartProduct'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: No se encontraron productos en el carrito.
        '500':
          description: Error interno del servidor.

  /carts/{pid}:
    post:
      summary: Agrega un producto al carrito.
      tags:
        - Cart
      security:
        - bearerAuth: []
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto que se desea agregar al carrito.
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddToCartRequest'
      responses:
        '201':
          description: Producto agregado al carrito correctamente.
        '400':
          description: ID del carrito es requerido o el producto ya está en el carrito.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Error interno del servidor.

  /carts/{cid}/purchase:
    post:
      summary: Realiza la compra del carrito.
      tags:
        - Cart
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: ID del carrito que se va a comprar.
          type: string
      responses:
        '200':
          description: Compra del carrito realizada correctamente.
        '400':
          description: ID del carrito no encontrado o productos no encontrados en el carrito.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Carrito no encontrado.
        '500':
          description: Error interno del servidor.

components:
  schemas:
    NewCart:
      type: object
      properties:
        cartId:
          type: string
          description: ID del carrito.
          example: "123456789"
    CartProduct:
      type: object
      properties:
        productId:
          type: string
          description: ID del producto.
          example: "609c7d5a9f19e678ef1d9c5e"
        quantity:
          type: integer
          description: Cantidad del producto en el carrito.
          example: 2
        price:
          type: number
          description: Precio del producto en el carrito.
          example: 1200
    AddToCartRequest:
      type: object
      properties:
        cartId:
          type: string
          description: ID del carrito.
          example: "123456789"

  responses:
    UnauthorizedError:
      description: No autorizado. Las credenciales de autenticación no son válidas o no se proporcionaron.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: No autorizado




